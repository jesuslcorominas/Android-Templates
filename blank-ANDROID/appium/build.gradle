apply plugin: 'java'

repositories {
    jcenter()
    mavenCentral()
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'junit:junit:4.12'
    compile 'io.appium:java-client:5.0.4'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.apache.httpcomponents:httpclient:4.5.3'
    compile 'commons-lang:commons-lang:2.6'
    compile 'com.google.http-client:google-http-client:1.21.0'
    compile 'com.testdroid:testdroid-api:2.9'
    compile 'com.google.http-client:google-http-client-jackson2:1.21.0'

    compile "com.google.code.gson:gson:$gsonVersion"
}

task(runAppium, dependsOn: 'classes', type: JavaExec) {

    def buildDirName = 'screenshots'
    def screenshotsDir = file(buildDirName)
    if (screenshotsDir.exists()) {
        screenshotsDir.delete();
    }

    file(buildDirName).mkdir()

    def server
    def appiumPropsFile = file('appium.properties')
    if (appiumPropsFile.canRead()) {
        def Properties appiumProps = new Properties()

        appiumProps.load(new FileInputStream(appiumPropsFile))
        server= appiumProps['server']
    } else {
        throw new GradleException("Could not read appium.properties!")
    }

    args server, packageName + "app", buildDirName, launchActivity
    main = packageName + "appium.Appium"

    classpath = sourceSets.main.runtimeClasspath
}